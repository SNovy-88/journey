package at.fhv.journey.Integration;// Generated by Selenium IDE

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;
public class SearchLinkingTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void searchLinking() {
    driver.get("http://localhost:8080/Journey_war_exploded/");
    driver.manage().window().setSize(new Dimension(816, 860));
    driver.findElement(By.linkText("DISCOVER")).click();
    driver.findElement(By.name("searchString")).click();
    driver.findElement(By.id("btn-search")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".hike-box:nth-child(1) .col-md-8"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".hike-box:nth-child(3) .col-md-8"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.name("searchString")).click();
    driver.findElement(By.name("searchString")).click();
    {
      WebElement element = driver.findElement(By.name("searchString"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.name("searchString")).click();
    driver.findElement(By.name("searchString")).sendKeys("GÃ¶tzis");
    driver.findElement(By.cssSelector(".search-button-rlist")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".image"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.cssSelector(".fitness-level-moderate")).click();
    driver.findElement(By.cssSelector(".col-md-8")).click();
    {
      List<WebElement> elements = driver.findElements(By.id("4"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bi-arrows"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bi-stopwatch"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bi-arrows-vertical"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.id("hikeDetailsButton"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".col-md-3:nth-child(1)")).getText(), is("5.03km"));
    driver.findElement(By.cssSelector(".col-md-3:nth-child(2)")).click();
    assertThat(driver.findElement(By.cssSelector(".col-md-3:nth-child(2)")).getText(), is("1h 31min"));
    driver.findElement(By.cssSelector(".col-md-3:nth-child(3)")).click();
    assertThat(driver.findElement(By.cssSelector(".col-md-3:nth-child(3)")).getText(), is("160m"));
    driver.findElement(By.cssSelector(".col-md-8")).click();
    assertThat(driver.findElement(By.cssSelector(".fitness-level-moderate")).getText(), is("MODERATE"));
    driver.findElement(By.name("searchString")).click();
    driver.findElement(By.name("searchString")).sendKeys("USA");
    driver.findElement(By.cssSelector(".search-button-rlist")).click();
    driver.findElement(By.cssSelector(".noHikeText")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".noHikeText"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.linkText("DISCOVER")).click();
    {
      List<WebElement> elements = driver.findElements(By.name("searchString"));
      assert(elements.size() > 0);
    }
  }
}
